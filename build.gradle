plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.11.0-SNAPSHOT" apply false
    id "io.freefair.lombok" version "6.4.1"
}

architectury {
    minecraft = rootProject.mc_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.mc_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        //parchment("org.parchmentmc.data:parchment-${rootProject.mc_version}:${rootProject.parchment_version}-nightly-SNAPSHOT@zip")

        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.18.1+build.22:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.mod_group

    repositories {
        mavenLocal()
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven {
            // Location of LittleLogistics
            name 'edtoaster'
            url 'https://maven.edtoaster.ca'
        }

        maven {
            // Location of the maven for mixed mappings, Registrate, and Flywheel
            name 'tterrag maven'
            url 'https://maven.tterrag.com'
        }

        maven {
            name 'parchment'
            url 'https://maven.parchmentmc.org'
        }
        maven {url "https://cursemaven.com"}
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}